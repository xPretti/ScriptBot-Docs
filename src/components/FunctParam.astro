---
const { type, name, comment, value = undefined , typeLink="/constants/types"} = Astro.props;
---

<div class="param">
  {value ? <p class="optional">Optional</p> : <p class="required">Required</p>}
  <p>
    <a href={typeLink}><span class="type">{type}</span></a>
    {
      value ? (
        <span>{name}</span>
        <span class="value">= {value};</span>
      ) : (
        <span>{name};</span>
      )
    }
    <span class="comment">// {comment}</span>
  </p>
</div>

<style>
  div {
    margin-top: 0;
    width: auto !important;
    max-width: auto;
    min-width: auto !important;
  }

  p {
    margin: 0;
  }

  a {
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
    text-decoration-color: var(--sl-color-function-type);
  }

  .param {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.5em;
  }

  .type {
    font-weight: bold;
    color: var(--sl-color-function-type);
  }

  .comment {
    color: var(--sl-color-function-comment);
  }

  .value {
    color: var(--sl-color-function-value);
  }


  .required,
  .optional {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0 5px 0 5px;
    border-radius: 5px;
    font-size: 12px;
    width: 75px;
    height: 21px;
  }
  .required {
    color: var(--sl-color-function-required);
    background-color: color-mix(in srgb, var(--sl-color-function-required) 10%, transparent 100%);
    border: 1px solid var(--sl-color-function-required);
  }

  .optional {
    color: var(--sl-color-function-optional);
    background-color: color-mix(in srgb, var(--sl-color-function-optional) 10%, transparent 100%);
    border: 1px solid var(--sl-color-function-optional);
  }
</style>
