---
import { FUNCTION_MAPPING } from "@src/data/functions-data";
import CodeVar from "@components/CodeVar.astro";
import { Icon } from "@astrojs/starlight/components";
import ReactFunctionModal from "./react/ReactFunctionModal";

const { category } = Astro.props;

const containsAliases =
   FUNCTION_MAPPING.get(category) &&
   Array.from(FUNCTION_MAPPING.get(category)!.values()).find((fn) => {
      return fn.aliases;
   });
const elements =
   FUNCTION_MAPPING.get(category) &&
   Array.from(FUNCTION_MAPPING.get(category)!.values());
---

{
   elements && (
      <table>
         <thead>
            <tr>
               <th>FUNÇÕES</th>
               <th class="aliases">{containsAliases && "ALIASES"}</th>
               <th>RETORNOS</th>
            </tr>
         </thead>
         <tbody>
            {elements.map((fn) => (
               <tr>
                  <td>
                     <div class="name-container">
                        {fn.aliases && (
                           <div class="aliases-mobile">
                              <CodeVar>{fn.aliases}</CodeVar>
                           </div>
                        )}
                        <CodeVar>{fn.name}</CodeVar>
                     </div>
                  </td>
                  <td class="aliases">
                     {fn.aliases && <CodeVar>{fn.aliases}</CodeVar>}
                  </td>
                  <td>
                     <ReactFunctionModal
                        client:visible
                        fnCategory={fn.category}
                        fnName={fn.name}
                     >
                        <div class="description">
                           <p class="text">{fn.description.simple}</p>
                           <Icon
                              class="redirect-icon"
                              name="open-book"
                              size="1.5rem"
                           />
                        </div>
                     </ReactFunctionModal>
                  </td>
               </tr>
            ))}
         </tbody>
      </table>
   )
}

<!-- Estilos -->
<style>
   td {
      height: 3rem;
      vertical-align: middle;
   }
   p,
   svg {
      margin: 0;
      padding: 0;
   }
   .description {
      position: relative;
      display: flex;
      flex-direction: row;
      height: 100%;
      align-items: center;
   }

   .redirect-icon {
      display: inline-block;
      opacity: 0.1;
      position: absolute;
      height: 100%;
      top: 0;
      right: 10px;
   }

   .description:hover .text,
   .description:hover .redirect-icon {
      color: var(--sl-color-accent-high);
      opacity: 1;
      transition: opacity 0.2s ease-in-out;
      cursor: pointer;
   }

   .aliases-mobile {
      display: none;
   }
   @media (max-width: 950px) {
      .aliases {
         display: none;
      }
      .aliases-mobile {
         display: block;
      }
   }
</style>
